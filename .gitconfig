[apply]

# Detect whitespace errors when applying a patch.
whitespace = fix

[branch]

# Show most recently changed branches first.
sort = -committerdate

# make sure VSCode and the `code` shell command
[core]
editor = code --wait --new-window

# Use custom `.gitignore`.
excludesFile = ~/.gitignore

# Treat spaces before tabs and all kinds of trailing whitespace as an error.
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space

# Make `git rebase` safer on macOS.
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false

# Speed up commands involving untracked files such as `git status`.
# https://git-scm.com/docs/git-update-index#_untracked_cache
untrackedCache = true

[color]

# Use colors in Git commands that are capable of colored output when
# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
ui = auto

[color "branch"]

current = yellow reverse
local = yellow
remote = green

[color "diff"]

meta = yellow bold
frag = magenta bold # line info
old = red           # deletions
new = green         # additions

[color "status"]

added = yellow
changed = green
untracked = cyan

[diff]

# Detect copies as well as renames.
renames = copies

[diff "bin"]

# Use `hexdump` to diff binary files.
textconv = hexdump -v -C

[merge]

# Include summaries of merged commits in newly created merge commit messages
log = true

[push]

# https://git-scm.com/docs/git-config#git-config-pushdefault
default = simple
# Make `git push` push relevant annotated tags when pushing branches out.
followTags = true
# automatically setup remote on git push on a new branch
autoSetupRemote = true

[pull]
rebase = true
[diff "sopsdiffer"]
	textconv = sops -d
[fetch]
	prune = true
[commit]
	gpgSign = true
[rebase]
	instructionFormat = (%an <%ae>) %s

# For my work laptop
[includeIf "gitdir:~/front/"]
	path = ~/front/.gitconfig

# For my personal laptop
[includeIf "gitdir:~/github/"]
	path = ~/github/.gitconfig